{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onButtonClick","todoToShow","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","option","onSelectChange","filter","onFilterChange","onFilterClear","value","onChange","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","useState","user","setUser","isLoading","setIsLoading","useEffect","fetchUser","a","fetchedUser","href","email","name","App","typeOfTodos","setTypeOfTodos","setFilter","setTodoToShow","setTodos","fetchTodos","todosFromServer","groupedTodos","filteredTodos","toLowerCase","includes","event","target","ReactDOM","render","document","getElementById"],"mappings":"2QAUaA,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,MACAC,EAFuC,EAEvCA,cACAC,EAHuC,EAGvCA,WAHuC,OAKvC,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCAEIH,EAAMI,KAAI,SAACC,GACT,IAAQC,EAAyBD,EAAzBC,GAAIC,EAAqBF,EAArBE,MAAOC,EAAcH,EAAdG,UAEnB,OACE,qBACE,UAAQ,OACRL,UAAU,4BAFZ,UAKE,oBAAIA,UAAU,eAAd,SAA8BG,IAC9B,oBAAIH,UAAU,eAAd,SAEIK,GACE,sBAAML,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAKrB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWM,IAAW,CACpB,mBAAoBD,EACpB,mBAAoBA,IAHxB,SAMGD,MAGL,oBAAIJ,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMV,EAAcI,IAJ/B,SAME,sBAAMF,UAAU,OAAhB,SACE,mBACEA,UACEM,IAAW,CACT,cAAwB,OAAVP,QAAU,IAAVA,OAAA,EAAAA,EAAYI,MAAOA,EACjC,oBAA8B,OAAVJ,QAAU,IAAVA,OAAA,EAAAA,EAAYI,MAAOA,cAlC9CA,YC5BNM,EAA8B,SAAC,GAAD,IACzCC,EADyC,EACzCA,OACAC,EAFyC,EAEzCA,eACAC,EAHyC,EAGzCA,OACAC,EAJyC,EAIzCA,eACAC,EALyC,EAKzCA,cALyC,OAOzC,uBAAMd,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBAAQ,UAAQ,eAAee,MAAOL,EAAQM,SAAUL,EAAxD,UACE,wBAAQI,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGf,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACViB,YAAY,YACZF,MAAOH,EACPI,SAAUH,IAEZ,sBAAMb,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAIbY,GACE,sBAAMZ,UAAU,gBAAgBkB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRZ,KAAK,SACLP,UAAU,SACVQ,QAASM,aCnCvB,SAASM,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,IAEMC,EAAU,SAACC,GAAD,OAAoBZ,EAAG,iBAAiBY,KCvBlDC,G,MAAmB,kBAC9B,qBAAKjC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCYNkC,EAA6B,SAAC,GAA6B,IAA3BhC,EAA0B,EAA1BA,KAAMJ,EAAoB,EAApBA,cAE/CkC,EAIE9B,EAJF8B,OACA5B,EAGEF,EAHFE,MACAD,EAEED,EAFFC,GACAE,EACEH,EADFG,UAGF,EAAwB8B,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAcA,OAZAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,6DAChBH,GAAa,GADG,SAEUR,EAAQC,GAFlB,OAEVW,EAFU,OAIhBN,EAAQM,GACRJ,GAAa,GALG,2CAAH,qDAQfE,MACC,IAGD,sBAAKzC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdsC,EACC,cAAC,EAAD,IAEA,sBAAKtC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYG,KAIZ,wBACEI,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS,kBAAMV,EAAc,YAIjC,sBAAKE,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGI,IAGH,oBAAGJ,UAAU,QAAQ,UAAQ,aAA7B,UAEIK,EACI,wBAAQL,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAGL,OAED,mBAAG4C,KAAI,wBAAYR,QAAZ,IAAYA,OAAZ,EAAYA,EAAMS,OAAzB,SACGT,GAAQA,EAAKU,oBCpEjBC,EAAgB,WAC3B,MAAsCZ,mBAAS,OAA/C,mBAAOa,EAAP,KAAoBC,EAApB,KACA,EAA4Bd,mBAAS,IAArC,mBAAOvB,EAAP,KAAesC,EAAf,KACA,EAAkCf,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCJ,mBAAsB,MAA1D,mBAAOpC,EAAP,KAAmBoD,EAAnB,KACA,EAA0BhB,mBAAiB,IAA3C,mBAAOtC,EAAP,KAAcuD,EAAd,KAEAZ,qBAAU,WACR,IAAMa,EAAU,uCAAG,4BAAAX,EAAA,6DACjBH,GAAa,GADI,SHIOnB,EAAY,UGJnB,OAEXkC,EAFW,OAIjBF,EAASE,GACTf,GAAa,GALI,2CAAH,qDAQhBc,MACC,IAEH,IAYME,EAA+B,QAAhBP,EACjBnD,EACAA,EAAMe,QAAO,gBAAGP,EAAH,EAAGA,UAAH,MAAoC,cAAhB2C,EAA8B3C,GAAaA,KAE1EmD,EAA2B,KAAX5C,EAClB2C,EACAA,EAAa3C,QAAO,qBAAGR,MAAkBqD,cAAcC,SAAS9C,EAAO6C,kBAE3E,OACE,qCACE,qBAAKzD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,OAAQsC,EACRrC,eA9BW,SAACgD,GACxBV,EAAeU,EAAMC,OAAO7C,QA8BhBH,OAAQA,EACRC,eA5Ba,SAAC8C,GAC1BT,EAAUS,EAAMC,OAAO7C,QA4BXD,cAzBY,WACxBoC,EAAU,SA4BF,sBAAKlD,UAAU,QAAf,UAEIsC,GAAa,cAAC,EAAD,IAEf,cAAC,EAAD,CACEzC,MAAO2D,EACP1D,cAAe,SAACI,GAAD,OAAUiD,EAAcjD,IACvCH,WAAYA,cAOpBA,GAAc,cAAC,EAAD,CAAWG,KAAMH,EAAYD,cAAe,SAACI,GAAD,OAAUiD,EAAcjD,UC/E1F2D,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bb382de6.chunk.js","sourcesContent":["import React, { Dispatch, SetStateAction } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  onButtonClick: Dispatch<SetStateAction<Todo | null>>\n  todoToShow: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onButtonClick,\n  todoToShow,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {\n        todos.map((todo) => {\n          const { id, title, completed } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className=\"has-background-info-light\"\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {\n                  completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )\n                }\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={classNames({\n                    'has-text-danger': !completed,\n                    'has-text-success': completed,\n                  })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onButtonClick(todo)}\n                >\n                  <span className=\"icon\">\n                    <i\n                      className={\n                        classNames({\n                          'far fa-eye': todoToShow?.id !== id,\n                          'far fa-eye-slash': todoToShow?.id === id,\n                        })\n                      }\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })\n      }\n    </tbody>\n  </table>\n);\n","import React, { ChangeEventHandler } from 'react';\n\ntype Props = {\n  option: string,\n  onSelectChange: ChangeEventHandler<HTMLSelectElement>,\n  filter: string,\n  onFilterChange: ChangeEventHandler<HTMLInputElement>,\n  onFilterClear: () => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  option,\n  onSelectChange,\n  filter,\n  onFilterChange,\n  onFilterClear,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select data-cy=\"statusSelect\" value={option} onChange={onSelectChange}>\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={filter}\n        onChange={onFilterChange}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {\n        filter && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onFilterClear}\n            />\n          </span>\n        )\n      }\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React,\n{\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useState,\n} from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  onButtonClick: Dispatch<SetStateAction<Todo | null>>,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onButtonClick }) => {\n  const {\n    userId,\n    title,\n    id,\n    completed,\n  } = todo;\n\n  const [user, setUser] = useState<User>();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      setIsLoading(true);\n      const fetchedUser = await getUser(userId);\n\n      setUser(fetchedUser);\n      setIsLoading(false);\n    };\n\n    fetchUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onButtonClick(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user && user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { ChangeEvent, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [typeOfTodos, setTypeOfTodos] = useState('all');\n  const [filter, setFilter] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [todoToShow, setTodoToShow] = useState<Todo | null>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      setIsLoading(true);\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n      setIsLoading(false);\n    };\n\n    fetchTodos();\n  }, []);\n\n  const handleTypeChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setTypeOfTodos(event.target.value);\n  };\n\n  const handleFilterChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setFilter(event.target.value);\n  };\n\n  const handleFilterClear = () => {\n    setFilter('');\n  };\n\n  const groupedTodos = typeOfTodos === 'all'\n    ? todos\n    : todos.filter(({ completed }) => (typeOfTodos === 'completed' ? completed : !completed));\n\n  const filteredTodos = filter === ''\n    ? groupedTodos\n    : groupedTodos.filter(({ title }) => title.toLowerCase().includes(filter.toLowerCase()));\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                option={typeOfTodos}\n                onSelectChange={handleTypeChange}\n                filter={filter}\n                onFilterChange={handleFilterChange}\n                onFilterClear={handleFilterClear}\n              />\n            </div>\n\n            <div className=\"block\">\n              {\n                isLoading && <Loader />\n              }\n              <TodoList\n                todos={filteredTodos}\n                onButtonClick={(todo) => setTodoToShow(todo)}\n                todoToShow={todoToShow}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      {\n        todoToShow && <TodoModal todo={todoToShow} onButtonClick={(todo) => setTodoToShow(todo)} />\n      }\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}